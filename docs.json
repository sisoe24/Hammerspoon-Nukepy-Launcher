[
  {
    "Command": [],
    "Constant": [],
    "Constructor": [],
    "Deprecated": [],
    "Field": [],
    "Function": [],
    "Method": [
      {
        "def": "HNukeLauncher:addDirectory(path, HNukeLauncher:parseRecursively)",
        "desc": "Generate chooser entries from python files in the path",
        "doc": "Generate chooser entries from python files in the path\n\nParameters:\npath - the path to be parsed for .py files\narseRecursively - An optional boolean for recursive parsing",
        "name": "addDirectory",
        "parameters": [
          "path - the path to be parsed for .py files",
          "arseRecursively - An optional boolean for recursive parsing"
        ],
        "signature": "HNukeLauncher:addDirectory(path, HNukeLauncher:parseRecursively)",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "HNukeLauncher:bindHotkeys(mapping)",
        "desc": "Add a hotkey to call the chooser menu",
        "doc": "Add a hotkey to call the chooser menu\n\nParameters:\nmapping - a table containing the shortcuts keys: {{\"ctrl\", \"shift\"}, \"f\"}",
        "name": "bindHotkeys",
        "parameters": [
          "mapping - a table containing the shortcuts keys: {{\"ctrl\", \"shift\"}, \"f\"}"
        ],
        "signature": "HNukeLauncher:bindHotkeys(mapping)",
        "stripped_doc": "",
        "type": "Method"
      }
    ],
    "Variable": [
      {
        "def": "HNukeLauncher.logger",
        "desc": "Logging functionality. Defaults to info",
        "doc": "Logging functionality. Defaults to info",
        "name": "logger",
        "signature": "HNukeLauncher.logger",
        "stripped_doc": "",
        "type": "Variable"
      },
      {
        "def": "HNukeLauncher.pathLength",
        "desc": "How long the path should be in the subtext of the chooser 'users/x/path3/path2/path1/. Starts from the end'",
        "doc": "How long the path should be in the subtext of the chooser 'users/x/path3/path2/path1/. Starts from the end'",
        "name": "pathLength",
        "signature": "HNukeLauncher.pathLength",
        "stripped_doc": "",
        "type": "Variable"
      },
      {
        "def": "HNukeLauncher.returnFocus",
        "desc": "Return the focus to the app which is currenlty active when the script launcher is executed.",
        "doc": "Return the focus to the app which is currenlty active when the script launcher is executed.",
        "name": "returnFocus",
        "signature": "HNukeLauncher.returnFocus",
        "stripped_doc": "",
        "type": "Variable"
      }
    ],
    "desc": "Create a chooser menu with python files to be launched in Nuke app.",
    "doc": "Create a chooser menu with python files to be launched in Nuke app.\n\nDownload: [https://github.com/Hammerspoon/Spoons/raw/master/Spoons/PopupTranslateSelection.spoon.zip](https://github.com/Hammerspoon/Spoons/raw/master/Spoons/PopupTranslateSelection.spoon.zip)",
    "items": [
      {
        "def": "HNukeLauncher:addDirectory(path, HNukeLauncher:parseRecursively)",
        "desc": "Generate chooser entries from python files in the path",
        "doc": "Generate chooser entries from python files in the path\n\nParameters:\npath - the path to be parsed for .py files\narseRecursively - An optional boolean for recursive parsing",
        "name": "addDirectory",
        "parameters": [
          "path - the path to be parsed for .py files",
          "arseRecursively - An optional boolean for recursive parsing"
        ],
        "signature": "HNukeLauncher:addDirectory(path, HNukeLauncher:parseRecursively)",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "HNukeLauncher:bindHotkeys(mapping)",
        "desc": "Add a hotkey to call the chooser menu",
        "doc": "Add a hotkey to call the chooser menu\n\nParameters:\nmapping - a table containing the shortcuts keys: {{\"ctrl\", \"shift\"}, \"f\"}",
        "name": "bindHotkeys",
        "parameters": [
          "mapping - a table containing the shortcuts keys: {{\"ctrl\", \"shift\"}, \"f\"}"
        ],
        "signature": "HNukeLauncher:bindHotkeys(mapping)",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "HNukeLauncher.logger",
        "desc": "Logging functionality. Defaults to info",
        "doc": "Logging functionality. Defaults to info",
        "name": "logger",
        "signature": "HNukeLauncher.logger",
        "stripped_doc": "",
        "type": "Variable"
      },
      {
        "def": "HNukeLauncher.pathLength",
        "desc": "How long the path should be in the subtext of the chooser 'users/x/path3/path2/path1/. Starts from the end'",
        "doc": "How long the path should be in the subtext of the chooser 'users/x/path3/path2/path1/. Starts from the end'",
        "name": "pathLength",
        "signature": "HNukeLauncher.pathLength",
        "stripped_doc": "",
        "type": "Variable"
      },
      {
        "def": "HNukeLauncher.returnFocus",
        "desc": "Return the focus to the app which is currenlty active when the script launcher is executed.",
        "doc": "Return the focus to the app which is currenlty active when the script launcher is executed.",
        "name": "returnFocus",
        "signature": "HNukeLauncher.returnFocus",
        "stripped_doc": "",
        "type": "Variable"
      }
    ],
    "name": "HNukeLauncher",
    "stripped_doc": "\nDownload: []()",
    "submodules": [],
    "type": "Module"
  }
]